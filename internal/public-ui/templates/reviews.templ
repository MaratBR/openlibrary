package templates

import "context"
import "github.com/nicksnyder/go-i18n/v2/i18n"
import "github.com/MaratBR/openlibrary/internal/app"
import "fmt"
import "github.com/gofrs/uuid"
import "github.com/MaratBR/openlibrary/internal/auth"

templ Reviews(ctx context.Context, l *i18n.Localizer, review app.Nullable[app.ReviewDto], reviews []app.ReviewDto, authorID uuid.UUID) {
    <section>
        <header>
            <h2 class="font-title text-2xl my-2">{ l.MustLocalize(&i18n.LocalizeConfig{
                MessageID: "reviews.title",
            }) }</h2>
        </header>
        <ul class="space-y-2">
            for _, review := range reviews {
                @bookReview(ctx, l, review, review.User.ID == authorID)
            }
        </ul>
    </section>
}

templ bookReview(
    ctx context.Context, 
    l *i18n.Localizer, 
    review app.ReviewDto, 
    isAuthor bool,
) {
    {{
        userSession, authorized := auth.GetSession(ctx)
        reviewID := fmt.Sprintf("review%s", review.User.ID.String())
        yourReview := authorized && userSession.UserID == review.User.ID
        canEdit := yourReview || userSession.UserRole == app.RoleAdmin || userSession.UserRole == app.RoleModerator || userSession.UserRole == app.RoleSystem // TODO change to admin/mod
    }}
    <div
        x-data="bookReview"
        class="group grid grid-cols-[auto_1fr] gap-6 rounded-2xl border p-4 relative"
        :class="state === 'editing' ? 'border-2' : ''"
        id={fmt.Sprintf("review-%s", review.User.ID.String())}>

        <div>
            <img class="ol-avatar" src={ review.User.Avatar } />
        </div>


        <div>
            <span class="mb-2 flex gap-1">
                <a class="ol-link text-lg" href={ templ.SafeURL(fmt.Sprintf("/user/%s", review.User.ID)) }>{ review.User.Name }</a>
                if isAuthor {
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                        <g
                            fill="none"
                            stroke="currentColor"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="1.5"
                            color="currentColor"
                        >
                            <path d="M5.076 17C4.089 4.545 12.912 1.012 19.973 2.224c.286 4.128-1.734 5.673-5.58 6.387c.742.776 2.055 1.753 1.913 2.974c-.1.868-.69 1.295-1.87 2.147C11.85 15.6 8.854 16.78 5.076 17" />
                            <path d="M4 22c0-6.5 3.848-9.818 6.5-12" />
                        </g>
                    </svg>
                }
            </span>

            <div x-bind="content">
                <div class="mb-2">
                    @starRating(float64(review.Rating), 0.4)
                </div>
                <article x-ignore class="__user-content text-sm">
                    @templ.Raw(review.Content)
                </article>
            </div>

            if canEdit {
                @templ.JSONScript(reviewID, review)
            }
            <template x-bind="islandTemplate">
                <ol-island x-bind="island" name="review-editor" data-source={ reviewID }  />
            </template>
        </div>

        <div x-bind="actions" class="text-muted-foreground transition-opacity opacity-0 group-hover:opacity-100 absolute top-2 right-2 flex gap-2">
            if canEdit {
                <button x-bind="editButton" class="ol-btn ol-btn--icon ol-btn--ghost">
                    <span class="material-symbols-outlined">edit</span>
                </button>
            }
            <button class="ol-btn ol-btn--icon ol-btn--ghost">
                <span class="material-symbols-outlined">flag</span>
            </button>
        </div>
    </div>
}