// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: copyfrom.go

package store

import (
	"context"
)

// iteratorForInsertDefinedTagEnMasse implements pgx.CopyFromSource.
type iteratorForInsertDefinedTagEnMasse struct {
	rows                 []InsertDefinedTagEnMasseParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertDefinedTagEnMasse) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertDefinedTagEnMasse) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].ID,
		r.rows[0].Name,
		r.rows[0].Description,
		r.rows[0].IsSpoiler,
		r.rows[0].IsAdult,
		r.rows[0].CreatedAt,
		r.rows[0].TagType,
		r.rows[0].SynonymOf,
	}, nil
}

func (r iteratorForInsertDefinedTagEnMasse) Err() error {
	return nil
}

func (q *Queries) InsertDefinedTagEnMasse(ctx context.Context, arg []InsertDefinedTagEnMasseParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"defined_tags"}, []string{"id", "name", "description", "is_spoiler", "is_adult", "created_at", "tag_type", "synonym_of"}, &iteratorForInsertDefinedTagEnMasse{rows: arg})
}
