package templates

import "github.com/MaratBR/openlibrary/internal/i18n"
import "github.com/MaratBR/openlibrary/internal/app"
import "fmt"
import "github.com/MaratBR/openlibrary/web/olresponse"
import "github.com/MaratBR/openlibrary/internal/csrf"

templ Users(resp app.UserListResponse, query *app.UsersQuery) {
    {{ 
        l := i18n.GetLocalizer(ctx)
        pageTitle := _t(l, "admin.users.title")
    }}

    @dashboardLayout(pageTitle) {
        <div class="admin-page-content relative">
            <form x-data={ fmt.Sprintf("{q:%s}", jsonString(query.Query)) } method="get" class="absolute top-16 right-4 flex items-center">
                <input value={ query.Query } x-model="q" class="input w-64 mr-2" name="q" placeholder={ _t(l, "common.search") } />
                <button type="submit" :disabled="q.trim()===''" class="btn btn--secondary">
                    <i class="fa-solid fa-search"></i>
                </button>
            </form>


            <header class="admin-page-header">
                <h1 class="text-3xl font-title">{ pageTitle }</h1>
            </header>

            <div class="flex gap-3">
                <a href="?usersFilter.role=admin" class="link link--primary">{ _t(l, "role.admin") }</a>|
                <a href="?usersFilter.role=system" class="link link--primary">{ _t(l, "role.system") }</a>|
                <a href="?usersFilter.role=moderator" class="link link--primary">{ _t(l, "role.moderator") }</a>|
                <a href="?" class="link link--primary">{ _t(l, "user.allUsers") }</a>
            </div>

            <div class="admin-card p-4 mt-4">

                {{
                    pagination := olresponse.Pagination(resp.Page, uint32(resp.TotalPages), 9)
                }}

                @pagination
                
                <table class="table -mx-4 my-2" style="width: calc(100% + 32px);">
                    <thead>
                        <tr>
                            <th class="w-64">ID</th>
                            <th>{ _t(l, "admin.users.name") }</th>
                            <th>{ _t(l, "admin.users.role") }</th>
                            <th>{ _t(l, "admin.users.actions") }</th>
                        </tr>
                    </thead>

                    <tbody>
                        {{
                            edit := _t(l, "common.edit")
                            delete := _t(l, "common.delete")
                        }}

                        if len(resp.Users) == 0 {
                            <tr>
                                <td colspan="4">
                                    { _t(l, "admin.users.noUsers") }
                                </td>
                            </tr>
                        }

                        for _, user := range resp.Users {
                            <tr>
                                <td>
                                    <span class="admin-id !text-xs">
                                        { user.ID.String() }
                                    </span>
                                </td>
                                <td>
                                    <a class="link link--primary" href={ templ.SafeURL(fmt.Sprintf("/users/%s", user.ID)) } target="_blank">
                                        { user.Name }
                                        <i class="fa-solid fa-arrow-up-right-from-square"></i>
                                    </a>
                                    if user.IsBanned {
                                        <div class="text-muted-foreground flex items-center">
                                            <i class="fa-solid fa-flag mr-1"></i>
                                            { _t(l, "admin.users.userIsBanned") }
                                        </div>
                                    }
                                </td>
                                <td>
                                    if user.Role == app.RoleUser {
                                        &ndash;
                                    } else {
                                        { _t(l, fmt.Sprintf("role.%s", user.Role)) }
                                    }
                                </td>
                                <td>
                                    <div class="flex gap-1">
                                        <a aria-label={ edit } class="btn btn--secondary btn--sm" href={ templ.SafeURL(fmt.Sprintf("/admin/users/%s", user.ID)) }>
                                            <i class="fa-solid fa-pencil"></i>
                                        </a>

                                        <a aria-label={ delete } class="btn btn--secondary btn--sm text-destructive hover:bg-destructive/10" href={ templ.SafeURL(fmt.Sprintf("/admin/users/%s/delete", user.ID)) }>
                                            <i class="fa-solid fa-trash-can"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @pagination
            </div>
        </div>
    }
}

templ User(user *app.UserDetailsDto) {
    {{
        l := i18n.GetLocalizer(ctx)
    }}

    @dashboardLayout(user.Name) {
        <div class="admin-page-content">
            <header class="admin-page-header">
                <h1 class="text-3xl flex items-center gap-1 font-title">
                    <a href="/admin/users" class="link">{ _t(l, "admin.users.title") }</a>
                    <span class="mx-2 text-muted-foreground text-[0.8em]">/</span>
                    {user.Name}
                </h1>
            </header>

            <section class="admin-card p-4">
                <form method="post">
                    @csrf.CSRFInputTempl(ctx)

                    @userFormSection("user-general-information", _t(l, "admin.users.generalInformation")) {
                        <div class="admin-form-field">
                            <div class="admin-form-field__label">
                                <label>{ _t(l, "admin.users.name") }</label>
                            </div>
                            <div class="admin-form-field__value">
                                <input  disabled name="name" class="input" value={ user.Name } />
                            </div>
                        </div>

                        <div class="admin-form-field">
                            <div class="admin-form-field__label">
                                <label>{ _t(l, "admin.users.gender") }</label>
                            </div>
                            {{
                                var genderType string
                                if user.About.Gender != "female" && user.About.Gender != "male" && user.About.Gender != "" {
                                    genderType = "other"
                                } else {
                                    genderType = user.About.Gender
                                }
                            }}
                            <div class="admin-form-field__value" x-data={ fmt.Sprintf("{genderType:'%s',value:%s}", genderType, jsonString(user.About.Gender)) }>
                                <select 
                                    x-model="genderType" 
                                    name="gender" 
                                    class="input">
                                    <option
                                        if genderType == "" {
                                            selected
                                        }
                                        >{ _t(l, "gender.ratherNotSay") }</option>
                                    <option
                                        if genderType == "male" {
                                            selected
                                        }
                                        value="male">{ _t(l, "gender.m") }</option>
                                    <option 
                                        if genderType == "female" {
                                            selected
                                        }
                                        value="female">{ _t(l, "gender.f") }</option>
                                    <option 
                                        if genderType == "other" {
                                            selected
                                        }
                                        value="other">{ _t(l, "gender.o") }</option>
                                </select>

                                <input name="genderOther" x-cloak x-show="genderType==='other'" class="input mt-2" />
                            </div>
                        </div>

                        <div class="admin-form-field">
                            <div class="admin-form-field__label">
                                <label>{ _t(l, "admin.users.about") }</label>
                            </div>
                            <div class="admin-form-field__value" x-data={ fmt.Sprintf("{genderType:'%s',value:%s}", genderType, jsonString(user.About.Gender)) }>
                                <textarea rows="8" name="about" class="input">{user.About.Bio}</textarea>
                            </div>
                        </div>

                        <div class="flex gap-2 mb-2">
                            <img class="avatar border size-32 rounded-none" src={ user.Avatar.LG } />
                            <p>
                                @templ.Raw(l.T("admin.users.providedByGravatar"))
                            </p>
                        </div>
                    }
                    @userFormSection("user-permissions", _t(l, "admin.users.rolesAndPermissions")) {
                        <div class="admin-form-field">
                            <div class="admin-form-field__label">
                                <label>{ _t(l, "admin.users.role") }</label>
                            </div>
                            <div class="admin-form-field__value">
                                <select name="role" class="input">
                                    for _, role := range app.AllRoles {
                                        <option 
                                            if role == user.Role {
                                                selected
                                            }
                                            value={ string(role) }>
                                            { _t(l, fmt.Sprintf("role.%s", string(role))) }
                                        </option>
                                    }
                                </select>

                                <input name="genderOther" x-cloak x-show="genderType==='other'" class="input mt-2" />
                            </div>
                        </div>
                    }

                    @userFormSection("user-account-management", _t(l, "admin.users.accountManagement")) {
                        <div x-data="{open:false,pwd:''}">
                            <div role="button" @click="open=true;$refs.pwdInput.dispatchEvent(new CustomEvent('island:custom:generate-password'))" class="btn btn--outline select-none">
                                { _t(l, "admin.users.resetPassword") }
                            </div>

                            @i18nExtractKeys(l, []string{
                                "passwordStrength.Weak",
                                "passwordStrength.OK",
                                "passwordStrength.Strong",
                                "passwordStrength.VeryStrong",
                                "common.cancel",
                            })
                            <div class="mt-2 max-w-128" x-cloak x-show="open">
                                <ol-island @island:destroy="open=false" x-ref="pwdInput" preload :active="open" src="/_/assets/islands/admin-password-reset.js" />
                            </div>
                        </div>   
                    }

                    <button type="submit" class="btn btn--lg btn--primary  mt-6">
                        { _t(l, "common.save") }
                    </button>
                </form>
            </section>
        </div>
    }
}

templ userFormSection(id, name string) {
    <div class="mb-4">
        <label id={ id } class="font-medium text-xl">{ name }</label>

        <section class="mt-2" aria-describedby={ id }>
            { children... }
        </section>
    </div>
}