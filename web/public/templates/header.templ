package templates

import "github.com/MaratBR/openlibrary/internal/i18n"
import "github.com/MaratBR/openlibrary/internal/auth"
import "fmt"

templ siteHeader() {
    @siteHeaderLayout() {
        <button class="site-header__mobile-open" @click="navOpen=!navOpen">
            <svg class="size-6" xmlns="http://www.w3.org/2000/svg" viewBox="F0 0 24 24"><title>menu</title><path class="fill-foreground" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" /></svg>
        </button>

        <nav
            id="site-nav" 
            class="site-nav"
            data-open="false"
            :data-open="navOpen">
            { children... }

            {{ 
                l := i18n.GetLocalizer(ctx)
            }}
            <ul class="nav-links">
                <a role="listitem" class="nav-link" href="/">
                    <i class="fa-solid fa-house text-xl mr-2"></i>
                    {l.T("nav.home")}
                </a>
                <a data-nav-trigger="library" role="listitem" class="nav-link relative" href="/library" data-nav-subitem-expand="#NavBar_LibrarySubMenu">
                    <i class="fa-solid fa-book-open text-xl mr-2"></i>
                    {l.T("nav.library")}
                </a>
                <a role="listitem" class="nav-link" href="/search">
                    <i class="fa-solid fa-search text-xl mr-2"></i>
                    {l.T("nav.search")}
                </a>
            </ul>

            <div 
                data-open="false"
                class="fixed top-[var(--header-height)] bg-card rounded-xl shadow-xl p-4 transition-all opacity-0 pointer-events-none data-[open=true]:pointer-events-auto data-[open=true]:opacity-100"
                style="left: var(--nav-trigger-left, 30vw);" data-nav-portal>
                123
            </div>

            <template data-nav-content="library">
                <div class="gap-2 grid grid-cols-2 grid-rows-[2fr_1fr]">
                    <a href="/library" class="transition-all shadow-sm border rounded-xl p-4 relative flex items-center overflow-hidden row-span-2 hover:text-primary hover:bg-primary/10 hover:ring-2 hover:ring-primary">
                        <i class="fa-solid fa-star text-8xl absolute bottom-0 -left-1 rotate-12"></i>
                        <div class="ml-28 text-3xl font-semibold">
                            { _t(l, "library.title") }
                        </div>
                    </a>

                    <a href="/library/archive" class="transition-all shadow-sm border rounded-xl p-4 relative flex items-center overflow-hidden hover:text-yellow-600 hover:bg-yellow-600/10 hover:ring-2 hover:ring-yellow-600">
                        <i class="fa-solid fa-box-archive text-8xl absolute -bottom-4 -left-4 rotate-12"></i>
                        <div class="ml-28 text-3xl font-semibold">
                            { _t(l, "library.archive") }
                        </div>
                    </a>

                    <a href="/library/collections" class="transition-all shadow-sm border rounded-xl p-4 relative flex items-center overflow-hidden hover:text-purple-600 hover:bg-purple-600/10 hover:ring-2 hover:ring-purple-600">
                        <i class="fa-solid fa-rectangle-list text-5xl absolute bottom-0 left-1 rotate-12"></i>
                        <div class="ml-28 text-3xl font-semibold">
                            { _t(l, "library.collections") }
                        </div>
                    </a>
                </div>
            </template>

            {{
                _, isAuthorized := auth.GetSession(ctx)
            }}
            <div class="site-nav__user">
                if isAuthorized {
                    @navUser()
                } else {
                    <a class="nav-link" href="/login">
                        { _t(l, "login.login") }
                        <i class="fa-solid fa-right-to-bracket"></i>
                    </a>
                }
            </div>
        </nav>
        <div class="site-nav-overlay" @click="navOpen=false" :data-open="navOpen" />
    }
}

templ siteHeaderLayout() {
    <header class="site-header" id="site-header">
        <div class="site-header__inner" x-data="{navOpen:false}">
            <a href="/" class="site-header__logo">
                <img style="width:64px;height:64px;min-width:64px;min-height:64px" width="64" height="64" class="dark:hidden" src="/_/embed-assets/logo.svg" />
                <img style="width:64px;height:64px;min-width:64px;min-height:64px" width="64" height="64" class="dark:block hidden" src="/_/embed-assets/logo-dark.svg" />
            </a>
            { children... }
        </div>
    </header>

        
}

templ navUser() {
    {{
        user := auth.RequireUser(ctx)
        l := i18n.GetLocalizer(ctx)
    }}
    <div class="nav-user" x-data="{userMenu:false}">
        <button @click="userMenu=true" class="nav-user__btn">
            <img class="avatar size-12 border hover:ring-2 ring-primary -ring-offset-1" src={user.Avatar.MD} /> 
        </button>
        <div x-cloak @click.outside="userMenu=false" x-show="userMenu" class="nav-user__menu">
            <a class="nav-user__menu__item" href="/books-manager">
                { _t(l, "account.bookManager") }
            </a>
            <a class="nav-user__menu__item" href={ templ.SafeURL(fmt.Sprintf("/users/%s", user.ID)) }>
                { _t(l, "account.profile") }
            </a>
            <a class="nav-user__menu__item" href="/account/settings">
                { _t(l, "account.settings") }
            </a>
            <button x-init @click="OLTheme.toggle()" class="nav-user__menu__item">
                <div class="ol-theme-only-content" data-theme="dark">
                    Dark
                </div>
                <div class="ol-theme-only-content" data-theme="light">
                    Light
                </div>
                <div class="ol-theme-only-content" data-theme="system">
                    System
                </div>
            </button>
            <hr />
            <a class="nav-user__menu__item" href="/logout">
                { _t(l, "account.logout") }
            </a>
            if user.Role.IsAdmin() {
                <a class="nav-user__menu__item" href="/admin" target="_blank">
                    { _t(l, "account.admin") }
                    <i class="fa-solid fa-arrow-up-right-from-square"></i>
                </a>
            }
        </div>
    </div>
}