package templates

import "github.com/MaratBR/openlibrary/internal/i18n-provider"
import "github.com/nicksnyder/go-i18n/v2/i18n"
import "github.com/MaratBR/openlibrary/internal/csrf"

type LoginData struct {
    InitialLogin string
    Error string
	IsToAdmin bool
}

templ Login(data LoginData) {
    {{
        l := i18nProvider.GetLocalizer(ctx)
    }}

    @htmlLayout("Login") {
        <div class="p-8 w-screen h-screen flex items-center justify-center bg-secondary">
            <main class="w-[400px] min-h-[450px] bg-background p-4 shadow-lg rounded-sm">
                if data.IsToAdmin {
                    <section class="p-2 bg-emerald-500 text-white rounded-sm -m-3 text-sm text-center">
                        { _t(l, "admin.login.redirectNotice") }
                    </section>
                }

                <div class="flex justify-center">
                    <img class="block dark:hidden" src="/_/embed-assets/logo.svg" />
                    <img class="hidden dark:block" src="/_/embed-assets/logo-dark.svg" />
                </div>

                

                <form method="post" class="flex flex-col">
                    @csrf.CSRFInputTempl(ctx)

                    <div class="mb-4">
                        <label for="username" class="label">
                            { l.MustLocalize(&i18n.LocalizeConfig{
                                MessageID: "login.username",
                            }) }
                        </label>
                        <input name="username" id="username" value={ data.InitialLogin } class="input" type="text" />
                    </div>

                    <div class="mb-4">
                        <label for="password" class="label">
                            { l.MustLocalize(&i18n.LocalizeConfig{
                                MessageID: "login.password",
                            }) }
                        </label>
                        <input name="password" id="password" class="input" type="password" />
                    </div>

                    <div class="flex gap-2 justify-center">
                        <button type="submit" class="ol-btn ol-btn--lg ol-btn--primary rounded-full">
                            { l.MustLocalize(&i18n.LocalizeConfig{
                                MessageID: "login.login",
                            }) }
                        </button>
                    </div>

                    if data.Error != "" {
                        <div class="border-destructive border bg-destructive/20 p-4 mt-4 rounded-lg text-sm">
                            { data.Error }
                        </div>
                    }
                </form>
            </main>
        </div>
    }
}